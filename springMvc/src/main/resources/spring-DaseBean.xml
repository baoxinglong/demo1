<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
        
        
        
<!-- 配置数据源-->
 <context:property-placeholder location="classpath:db.properties"/>  
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${driverClass}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
         <!--当连接池中的连接用完时，C3P0一次性创建新连接的数目 -->
        <property name="acquireIncrement" value="${acquireIncrement}"/>
        <!--初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值  -->
        <property name="initialPoolSize" value="${initialPoolSize}"/>
        <!--minPoolSize连接池 最少连接数  -->
         <property name="minPoolSize" value="${minPoolSize}"/>
        <!--maxPoolSize连接池 最大连接数  -->
         <property name="maxPoolSize" value="${maxPoolSize}"/>
         <!--maxIdleTime最大空闲时间  -->
         <property name="maxIdleTime" value="${maxIdleTime}"/>
    </bean>
    
     <!-- 配置SessionFactory -->    
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">             	
        <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>  
            </props>  
        </property>  
        <property name="annotatedClasses">  
            <list>  
                <value>com.my.model.Person</value>  
            </list>  
        </property>  
    </bean>      
     
        
      <!-- 配置一个事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean>  
    
    <!-- 基于注释的事务，当注释中发现@Transactional时，使用id为“transactionManager”的事务管理器  -->
    <!-- 如果没有设置transaction-manager的值，则spring以缺省默认的事务管理器来处理事务，默认事务管理器为第一个加载的事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
     <tx:advice id="txAdvice" transaction-manager="transactionManager">    
            <!-- 定义事务传播属性 -->    
            <tx:attributes>    
                <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->  
                <tx:method name="find*" propagation="REQUIRED"/>  
                <tx:method name="add*" propagation="REQUIRED"/>  
             
            </tx:attributes>    
        </tx:advice>    
</beans>